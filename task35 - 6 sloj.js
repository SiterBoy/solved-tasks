// // Вы живете в городе Картезия, где все дороги расположены в идеальной сетке. Вы пришли на прием на десять минут раньше, поэтому решили прогуляться. Город предоставляет своим гражданам приложение для построения пешеходов на их телефонах - каждый раз, когда вы нажимаете кнопку, он отправляет вам массив однобуквенных строк, представляющих маршруты ходьбы (например, ['n', 's', 'w', 'е']). Вы всегда проходите только один квартал для каждой буквы (направления), и вы знаете, что вам понадобится одна минута, чтобы пересечь один городской квартал, поэтому создайте функцию, которая вернет true, если прогулка, которую дает вам приложение, займет у вас ровно десять минут (вы не хочу приходить рано или поздно!) и, конечно же, вернет вас в исходную точку. В противном случае верните false .

// // Примечание : вы всегда будете получать действительный массив, содержащий случайный набор букв направления (только «n», «s», «e» или «w»). Он никогда не даст вам пустой массив (это не прогулка, это стоит на месте!).

// Test.expect(isValidWalk(['n','s','n','s','n','s','n','s','n','s']), 'should return true');
// Test.expect(!isValidWalk(['w','e','w','e','w','e','w','e','w','e','w','e']), 'should return false');
// Test.expect(!isValidWalk(['w']), 'should return false');
// Test.expect(!isValidWalk(['n','n','n','s','n','s','n','s','n','s']), 'should return false');


function isValidWalk(walk) {
  let vert = 0;
  let horiz = 0;
  let result = false;
  if (walk.length === 10){
    walk.forEach(elem =>{
      switch (elem){
        case 'n': 
          vert++;
          break;
        case 's':
          vert--;
          break;
        case 'w':
          horiz--;
          break;
        case 'e':
          horiz++
          break;
      }
    })
  } else {
    return false;
  }

  result = vert == 0 && horiz == 0 ? true:false;

  return result;
}

console.log()
